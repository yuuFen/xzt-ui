@import 'variables';

// reset   
* {
  box-sizing: border-box;
  outline: none;
}
html {
  font-size: 13px;
}
body {
  margin: 0;
  // font-family: Arial, Helvetica, sans-serif;
  line-height: 1.2em;
  background: map-get($colors, "light");
  -webkit-font-smoothing: antialiased;
}
a {
  color: #999;
}
p {
  line-height: 1.5rem;
}


// color
@each $colorKey, $colorValue in $colors {
  .text-#{$colorKey} {
    color: $colorValue;
  }
  .bg-#{$colorKey} {
    background-color: $colorValue;
  }
}

// text align
@each $var in (left, center, right) {
  .text-#{$var} {
    text-align: $var !important;
  }
}

//font size
@each $sizeKey, $size in $font-sizes {
  .fs-#{$sizeKey} {
    font-size: $size * $base-font-size;
  }
}

// text overflow
.text-ellipsis {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// width, height
.w-100 {
  width: 100%;
}
.h-100 {
  height: 100%;
}

// flex
.d-flex {
  display: flex;
}
.flex-column {
  flex-direction: column;
}
.flex-wrap {
  flex-wrap: wrap;
}
@each $key, $value in $flex-jc {
  .jc-#{$key} {
    justify-content: $value;
  }
}
@each $key, $value in $flex-ai {
  .ai-#{$key} {
    align-items: $value;
  }
}
.flex-1 {
  flex: 1;
}
.flex-grow-1 {
  flex-grow: 1;
}

// spacing
// 0-5: 0 0.25 0.5 1 1.5 3
//.mt-1 => margin top 1
//.pb-2 => padding bottom 2
@each $typeKey, $type in $spacing-types {
  // .m-1 { margin: 0.25rem; }
  @each $sizeKey, $size in $spacing-sizes {
    .#{$typeKey}-#{$sizeKey} {
      #{$type}: $size * $spacing-base-size;
    }
  }
  // .mx-1 { margin-left: 0.25rem;margin-right: 0.25rem;}
  // .my-1 { margin-top: 0.25rem;margin-bottom: 0.25rem;}
  @each $sizeKey, $size in $spacing-sizes {
    .#{$typeKey}x-#{$sizeKey} {
      #{$type}-left: $size * $spacing-base-size;
      #{$type}-right: $size * $spacing-base-size;
    }    
    .#{$typeKey}y-#{$sizeKey} {
      #{$type}-top: $size * $spacing-base-size;
      #{$type}-bottom: $size * $spacing-base-size;
    }
  }
  // .mt-1 { margin-top: 0.25rem;}
  @each $directionKey, $direction in $spacing-directions {
    @each $sizeKey, $size in $spacing-sizes {
      .#{$typeKey}#{$directionKey}-#{$sizeKey} {
        #{$type}-#{$direction}: $size * $spacing-base-size;
      }
    }
  }
}


// button
.btn {
  border: none;
  border-radius: 0.1538rem;
  font-size: map-get($font-sizes,"sm") * $base-font-size;
  padding: 0.2rem 0.6rem;
 &.btn-lg {
   display: flex;
   justify-content: center;
   align-items: center;
   i {
     color: map-get($colors, 'primary');
    //  font-weight: bold;
     font-size: 1.6rem;
     margin-right: 0.5rem;
   }
   background: map-get($colors, 'white-1');
   border: 1px solid map-get($colors, 'white-2');
   padding: 0.8rem 1rem;
   font-size: map-get($font-sizes,"md") * $base-font-size;
 }
}


// nav
.nav {
  display: flex;
  .nav-item {
    border-bottom: 3px solid transparent;
    padding-bottom: 0.2rem;
    &.active {
      color: map-get($map: $colors, $key: "primary");
      border-bottom-color: map-get($map: $colors, $key: "primary");
    }
  }
}

// sticky
@each $dir in (top, bottom) {
  .sticky-#{$dir} {
    z-index: 98;
    position: sticky;
    #{$dir}: 0;
  }
}

// borders
@each $dir in (top, right, bottom, left) {
  .border-#{$dir} {
    border-#{$dir}: 1px solid $border-color;
  }
}

// shadow
.shadow-card {
  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2), 0 5px 15px 0 rgba(0, 0, 0, 0.19);
}
.shadow-card-light {
  box-shadow: 0 0px 2px 0 rgba(0, 0, 0, 0.2), 0px 0px 5px 0 rgba(0, 0, 0, 0.19);
}
.shadow-nav {
  box-shadow: 1px 1px 3px 0px rgba(0, 0, 0, 0.19);
  border-bottom: 1px solid rgba(0, 0, 0, 0.19);
}

// swiper
.pagination-home {
  .swiper-pagination-bullet {
    opacity: 0.8;
    border-radius: 0.1538rem;
    background: #fff;
    &.swiper-pagination-bullet-active {
      background: map-get($colors, 'primary')
    }
  }
}